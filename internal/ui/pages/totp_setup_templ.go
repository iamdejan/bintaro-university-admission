// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "bintaro-university-admission/internal/ui/components"
import "bintaro-university-admission/internal/totp"

type TOTPSetupProps struct {
	QRCodeImageBase64 string
	SecretBase32      string
}

func TOTPSetup(props TOTPSetupProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		dropDownItems := []templ.Component{goBackDropDownItem()}
		templ_7745c5c3_Err = components.PageWrapper(components.PageWrapperProps{
			MainContent:   totpSetupMainContent(props),
			DropDownItems: dropDownItems,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func totpSetupMainContent(props TOTPSetupProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<input type=\"hidden\" id=\"maxLength\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(totp.DefaultOTPDigits)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/ui/pages/totp_setup.templ`, Line: 20, Col: 66}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><style>\n\t\t.main-container {\n\t\t\twidth: 100%;\n\t\t\tmax-width: 600px;\n\t\t}\n\n\t\t.setup-card {\n\t\t\tbackground: rgba(255, 255, 255, 0.95);\n\t\t\tbackdrop-filter: blur(10px);\n\t\t\tborder: 1px solid rgba(255, 255, 255, 0.3);\n\t\t\tborder-radius: 20px;\n\t\t\tpadding: 2rem;\n\t\t\tbox-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n\t\t\tanimation: fadeInUp 0.6s ease-out;\n\t\t}\n\t\t@keyframes fadeInUp {\n\t\t\tfrom {\n\t\t\t\topacity: 0;\n\t\t\t\ttransform: translateY(30px);\n\t\t\t}\n\t\t\tto {\n\t\t\t\topacity: 1;\n\t\t\t\ttransform: translateY(0);\n\t\t\t}\n\t\t}\n\t\t.setup-header {\n\t\t\ttext-align: center;\n\t\t\tmargin-bottom: 2rem;\n\t\t}\n\t\t.setup-header h2 {\n\t\t\tcolor: #333;\n\t\t\tfont-size: 2rem;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t\tfont-weight: 600;\n\t\t}\n\t\t.setup-header p {\n\t\t\tcolor: #666;\n\t\t\tfont-size: 1.1rem;\n\t\t\tline-height: 1.6;\n\t\t}\n\t\t.setup-steps {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tgap: 2rem;\n\t\t}\n\t\t.step {\n\t\t\tpadding: 1.5rem;\n\t\t\tbackground: rgba(102, 126, 234, 0.05);\n\t\t\tborder: 1px solid rgba(102, 126, 234, 0.2);\n\t\t\tborder-radius: 16px;\n\t\t\tposition: relative;\n\t\t\toverflow: hidden;\n\t\t}\n\t\t.step::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 4px;\n\t\t\theight: 100%;\n\t\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\t}\n\t\t.step-number {\n\t\t\tdisplay: inline-flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\twidth: 30px;\n\t\t\theight: 30px;\n\t\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\t\tcolor: white;\n\t\t\tborder-radius: 50%;\n\t\t\tfont-weight: 600;\n\t\t\tfont-size: 0.9rem;\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\t\t.step-title {\n\t\t\tcolor: #333;\n\t\t\tfont-size: 1.2rem;\n\t\t\tfont-weight: 600;\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\t\t.step-content {\n\t\t\tcolor: #666;\n\t\t\tline-height: 1.6;\n\t\t}\n\t\t.qr-container {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tpadding: 2rem;\n\t\t\tbackground: white;\n\t\t\tborder-radius: 12px;\n\t\t\tmargin: 1rem 0;\n\t\t\tbox-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n\t\t}\n\t\t.qr-code {\n\t\t\twidth: 200px;\n\t\t\theight: 200px;\n\t\t\tbackground: #f0f0f0;\n\t\t\tborder-radius: 8px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tfont-size: 0.9rem;\n\t\t\tcolor: #666;\n\t\t\ttext-align: center;\n\t\t\tbackground-size: contain;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position: center;\n\t\t}\n\t\t.secret-key {\n\t\t\tbackground: white;\n\t\t\tborder: 2px solid #e0e0e0;\n\t\t\tborder-radius: 12px;\n\t\t\tpadding: 1rem;\n\t\t\tmargin: 1rem 0;\n\t\t\tfont-family: \"Courier New\", monospace;\n\t\t\tfont-size: 0.9rem;\n\t\t\tcolor: #333;\n\t\t\ttext-align: center;\n\t\t\tword-break: break-all;\n\t\t\tposition: relative;\n\t\t}\n\t\t.copy-btn {\n\t\t\tposition: absolute;\n\t\t\tright: 0.5rem;\n\t\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\t\tcolor: white;\n\t\t\tborder: none;\n\t\t\tpadding: 0.3rem 0.6rem;\n\t\t\tborder-radius: 6px;\n\t\t\tfont-size: 0.8rem;\n\t\t\tcursor: pointer;\n\t\t\ttransition: all 0.3s ease;\n\t\t}\n\t\t.copy-btn:hover {\n\t\t\ttransform: translateY(-1px);\n\t\t\tbox-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n\t\t}\n\t\t.otp-input-group {\n\t\t\tmargin: 1rem 0;\n\t\t}\n\t\t.otp-input-group label {\n\t\t\tdisplay: block;\n\t\t\tcolor: #333;\n\t\t\tfont-weight: 600;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t}\n\t\t.otp-input {\n\t\t\twidth: 100%;\n\t\t\tpadding: 0.8rem;\n\t\t\tborder: 2px solid #e0e0e0;\n\t\t\tborder-radius: 8px;\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: center;\n\t\t\tletter-spacing: 0.5rem;\n\t\t\tfont-family: \"Courier New\", monospace;\n\t\t\ttransition: all 0.3s ease;\n\t\t}\n\t\t.otp-input:focus {\n\t\t\toutline: none;\n\t\t\tborder-color: #667eea;\n\t\t\tbox-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n\t\t}\n\t\t.verify-btn {\n\t\t\twidth: 100%;\n\t\t\tbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n\t\t\tcolor: white;\n\t\t\tborder: none;\n\t\t\tpadding: 1rem;\n\t\t\tborder-radius: 12px;\n\t\t\tfont-size: 1.1rem;\n\t\t\tfont-weight: 600;\n\t\t\tcursor: pointer;\n\t\t\ttransition: all 0.3s ease;\n\t\t\tmargin-top: 1rem;\n\t\t\tbox-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n\t\t}\n\t\t.verify-btn:hover {\n\t\t\ttransform: translateY(-2px);\n\t\t\tbox-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n\t\t}\n\t\t.verify-btn:active {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t\t.verify-btn:disabled {\n\t\t\topacity: 0.6;\n\t\t\tcursor: not-allowed;\n\t\t\ttransform: none;\n\t\t}\n\t\t.warning-note {\n\t\t\tbackground: rgba(255, 193, 7, 0.1);\n\t\t\tborder: 1px solid rgba(255, 193, 7, 0.3);\n\t\t\tborder-radius: 12px;\n\t\t\tpadding: 1rem;\n\t\t\tmargin: 1rem 0;\n\t\t\tcolor: #856404;\n\t\t\tfont-size: 0.9rem;\n\t\t\tline-height: 1.6;\n\t\t}\n\t\t.warning-note strong {\n\t\t\tcolor: #495057;\n\t\t}\n\t\t@media (max-width: 768px) {\n\t\t\t.navbar {\n\t\t\t\tpadding: 1rem;\n\t\t\t}\n\t\t\t.navbar h1 {\n\t\t\t\tfont-size: 1.2rem;\n\t\t\t}\n\t\t\t.main-content {\n\t\t\t\tpadding: 1rem;\n\t\t\t}\n\t\t\t.setup-card {\n\t\t\t\tpadding: 1.5rem;\n\t\t\t}\n\t\t\t.setup-header h2 {\n\t\t\t\tfont-size: 1.5rem;\n\t\t\t}\n\t\t\t.qr-code {\n\t\t\t\twidth: 160px;\n\t\t\t\theight: 160px;\n\t\t\t}\n\t\t}\n\t</style><div class=\"setup-card\"><div class=\"setup-header\"><h2>Enable Two-Factor Authentication</h2><p>Secure your account with an additional layer of protection using your mobile device.</p></div><div class=\"setup-steps\"><div class=\"step\"><div class=\"step-number\">1</div><div class=\"step-title\">Install an Authenticator App</div><div class=\"step-content\">Download and install an authenticator app on your mobile device such as Google Authenticator, Microsoft Authenticator, Authy, or KeePassXC.</div></div><div class=\"step\"><div class=\"step-number\">2</div><div class=\"step-title\">Scan the QR Code</div><div class=\"step-content\">Open your authenticator app and scan the QR code below to add your Bintaro University account.<div class=\"qr-container\"><div class=\"qr-code\" style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templruntime.SanitizeStyleAttributeValues("background-image: url(" + props.QRCodeImageBase64 + ")")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/ui/pages/totp_setup.templ`, Line: 265, Col: 91}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" id=\"qrCode\"></div></div></div></div><div class=\"step\"><div class=\"step-number\">3</div><div class=\"step-title\">Manual Entry (Alternative)</div><div class=\"step-content\">If you can't scan the QR code, you can manually enter this secret key into your authenticator app:<div class=\"secret-key\"><button class=\"copy-btn\" onclick=\"copySecret()\">Copy</button><div id=\"secretKey\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(props.SecretBase32)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/ui/pages/totp_setup.templ`, Line: 276, Col: 46}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></div><div class=\"warning-note\"><strong>Important:</strong> Keep this secret key secure and don't share it with anyone. You'll need it to recover your 2FA if you lose access to your authenticator app.</div></div></div><div class=\"step\"><div class=\"step-number\">4</div><div class=\"step-title\">Verify Setup</div><div class=\"step-content\">Enter the ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(totp.DefaultOTPDigits)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/ui/pages/totp_setup.templ`, Line: 287, Col: 38}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "-digit code from your authenticator app to complete the setup:<div class=\"otp-input-group\"><label for=\"otpCode\">Authentication Code</label> <input type=\"text\" id=\"otpCode\" class=\"otp-input\" maxlength=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(totp.DefaultOTPDigits)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/ui/pages/totp_setup.templ`, Line: 290, Col: 89}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\" placeholder=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(generatePlaceholder(totp.DefaultOTPDigits))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/ui/pages/totp_setup.templ`, Line: 290, Col: 148}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" onkeyup=\"validateOTP()\"></div><button class=\"verify-btn\" id=\"verifyBtn\" onclick=\"verifyOTP()\" disabled>Verify & Enable 2FA</button></div></div></div></div><script>\n\t\tconst maxLength = Number(document.querySelector(\"input#maxLength\").value);\n\n\t\tfunction copySecret() {\n\t\t\tconst secretKey = document.getElementById(\"secretKey\").textContent;\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(secretKey)\n\t\t\t\t.then(() => {\n\t\t\t\t\tconst copyBtn = document.querySelector(\".copy-btn\");\n\t\t\t\t\tconst originalText = copyBtn.textContent;\n\t\t\t\t\tcopyBtn.textContent = \"Copied!\";\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcopyBtn.textContent = originalText;\n\t\t\t\t\t}, 2000);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\talert(\"Failed to copy secret key. Please copy it manually.\");\n\t\t\t\t});\n\t\t}\n\n\t\tfunction validateOTP() {\n\t\t\tconst otpInput = document.getElementById(\"otpCode\");\n\t\t\tconst verifyBtn = document.getElementById(\"verifyBtn\");\n\t\t\tconst otpValue = otpInput.value;\n\n\t\t\t// Remove any non-digit characters\n\t\t\tconst cleanOTP = otpValue.replace(/\\D/g, \"\");\n\t\t\tif (cleanOTP !== otpValue) {\n\t\t\t\totpInput.value = cleanOTP;\n\t\t\t}\n\n\t\t\t// Enable verify button if OTP is \"max length\" digits\n\t\t\tif (cleanOTP.length === maxLength) {\n\t\t\t\tverifyBtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tverifyBtn.disabled = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction verifyOTP() {\n\t\t\tconst otpCode = document.getElementById(\"otpCode\").value;\n\t\t\tconst verifyBtn = document.getElementById(\"verifyBtn\");\n\n\t\t\tif (otpCode.length !== maxLength) {\n\t\t\t\talert(`Please enter a ${maxLength}-digit authentication code.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Disable button and show loading state\n\t\t\tverifyBtn.disabled = true;\n\t\t\tverifyBtn.textContent = \"Verifying...\";\n\n\t\t\tconst body = new URLSearchParams();\n\t\t\tbody.set(\"otp_code\", otpCode);\n\t\t\tfetch(\"/totp-setup\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: body,\n\n\t\t\t}).then((response) => {\n\t\t\t\tif (response.url = \"/dashboard\") {\n\t\t\t\t\talert(\"Success adding 2FA!\");\n\t\t\t\t\twindow.location.href = response.url;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle Enter key press in OTP input\n\t\tdocument.getElementById(\"otpCode\").addEventListener(\"keypress\", function (e) {\n\t\t\tif (e.key === \"Enter\" && !document.getElementById(\"verifyBtn\").disabled) {\n\t\t\t\tverifyOTP();\n\t\t\t}\n\t\t});\n\n\t\t// Auto-focus on OTP input when page loads\n\t\twindow.addEventListener(\"load\", function () {\n\t\t\tdocument.getElementById(\"otpCode\").focus();\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func goBackDropDownItem() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = components.DropDownItem(components.DropDownItemProps{
			ID:   "go-back",
			Text: "← Back to Dashboard",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<script>\n\t\tfunction goBack() {\n\t\t\tif (confirm(\"Are you sure you want to go back? Your 2FA setup will not be saved.\")) {\n\t\t\t\tfetch(\"/totp-setup\", {\n\t\t\t\t\tmethod: \"DELETE\",\n\t\t\t\t\tredirect: \"follow\"\n\t\t\t\t}).then((response) => {\n\t\t\t\t\twindow.location.href = response.url;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tdocument.querySelector(\"a#go-back\").addEventListener(\"click\", () => {\n\t\t\tgoBack();\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
