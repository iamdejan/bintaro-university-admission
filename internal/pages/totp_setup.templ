package pages

type TOTPSetupProps struct {
	QRCodeImageBase64 string
	SecretBase32      string
}

templ TOTPSetup(props TOTPSetupProps) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Bintaro University Admission - Enable 2FA</title>
			<style>
				* {
					margin: 0;
					padding: 0;
					box-sizing: border-box;
				}

				body {
					font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
					background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
					min-height: 100vh;
					display: flex;
					flex-direction: column;
				}

				.navbar {
					background: rgba(255, 255, 255, 0.1);
					backdrop-filter: blur(10px);
					padding: 1rem 2rem;
					box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
					border-bottom: 1px solid rgba(255, 255, 255, 0.2);
					display: flex;
					justify-content: space-between;
					align-items: center;
					position: relative;
				}

				.navbar h1 {
					color: white;
					font-size: 1.5rem;
					font-weight: 600;
					letter-spacing: 0.5px;
					text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
				}

				.back-btn {
					background: rgba(255, 255, 255, 0.2);
					border: 1px solid rgba(255, 255, 255, 0.3);
					color: white;
					padding: 0.5rem 1rem;
					border-radius: 8px;
					font-size: 0.9rem;
					font-weight: 500;
					cursor: pointer;
					transition: all 0.3s ease;
					text-decoration: none;
					display: flex;
					align-items: center;
					gap: 0.5rem;
				}

				.back-btn:hover {
					background: rgba(255, 255, 255, 0.3);
					transform: translateY(-1px);
				}

				.main-content {
					flex: 1;
					padding: 2rem;
					display: flex;
					justify-content: center;
					align-items: flex-start;
				}

				.setup-container {
					width: 100%;
					max-width: 600px;
				}

				.setup-card {
					background: rgba(255, 255, 255, 0.95);
					backdrop-filter: blur(10px);
					border: 1px solid rgba(255, 255, 255, 0.3);
					border-radius: 20px;
					padding: 2rem;
					box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
					animation: fadeInUp 0.6s ease-out;
				}

				@keyframes fadeInUp {
					from {
						opacity: 0;
						transform: translateY(30px);
					}
					to {
						opacity: 1;
						transform: translateY(0);
					}
				}

				.setup-header {
					text-align: center;
					margin-bottom: 2rem;
				}

				.setup-header h2 {
					color: #333;
					font-size: 2rem;
					margin-bottom: 0.5rem;
					font-weight: 600;
				}

				.setup-header p {
					color: #666;
					font-size: 1.1rem;
					line-height: 1.6;
				}

				.setup-steps {
					display: flex;
					flex-direction: column;
					gap: 2rem;
				}

				.step {
					padding: 1.5rem;
					background: rgba(102, 126, 234, 0.05);
					border: 1px solid rgba(102, 126, 234, 0.2);
					border-radius: 16px;
					position: relative;
					overflow: hidden;
				}

				.step::before {
					content: "";
					position: absolute;
					top: 0;
					left: 0;
					width: 4px;
					height: 100%;
					background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				}

				.step-number {
					display: inline-flex;
					align-items: center;
					justify-content: center;
					width: 30px;
					height: 30px;
					background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
					color: white;
					border-radius: 50%;
					font-weight: 600;
					font-size: 0.9rem;
					margin-bottom: 1rem;
				}

				.step-title {
					color: #333;
					font-size: 1.2rem;
					font-weight: 600;
					margin-bottom: 1rem;
				}

				.step-content {
					color: #666;
					line-height: 1.6;
				}

				.qr-container {
					display: flex;
					justify-content: center;
					align-items: center;
					padding: 2rem;
					background: white;
					border-radius: 12px;
					margin: 1rem 0;
					box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
				}

				.qr-code {
					width: 200px;
					height: 200px;
					background: #f0f0f0;
					border-radius: 8px;
					display: flex;
					align-items: center;
					justify-content: center;
					font-size: 0.9rem;
					color: #666;
					text-align: center;
					background-size: contain;
					background-repeat: no-repeat;
					background-position: center;
				}

				.secret-key {
					background: white;
					border: 2px solid #e0e0e0;
					border-radius: 12px;
					padding: 1rem;
					margin: 1rem 0;
					font-family: "Courier New", monospace;
					font-size: 0.9rem;
					color: #333;
					text-align: center;
					word-break: break-all;
					position: relative;
				}

				.copy-btn {
					position: absolute;
					right: 0.5rem;
					background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
					color: white;
					border: none;
					padding: 0.3rem 0.6rem;
					border-radius: 6px;
					font-size: 0.8rem;
					cursor: pointer;
					transition: all 0.3s ease;
				}

				.copy-btn:hover {
					transform: translateY(-1px);
					box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
				}

				.otp-input-group {
					margin: 1rem 0;
				}

				.otp-input-group label {
					display: block;
					color: #333;
					font-weight: 600;
					margin-bottom: 0.5rem;
				}

				.otp-input {
					width: 100%;
					padding: 0.8rem;
					border: 2px solid #e0e0e0;
					border-radius: 8px;
					font-size: 1rem;
					text-align: center;
					letter-spacing: 0.5rem;
					font-family: "Courier New", monospace;
					transition: all 0.3s ease;
				}

				.otp-input:focus {
					outline: none;
					border-color: #667eea;
					box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
				}

				.verify-btn {
					width: 100%;
					background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
					color: white;
					border: none;
					padding: 1rem;
					border-radius: 12px;
					font-size: 1.1rem;
					font-weight: 600;
					cursor: pointer;
					transition: all 0.3s ease;
					margin-top: 1rem;
					box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
				}

				.verify-btn:hover {
					transform: translateY(-2px);
					box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
				}

				.verify-btn:active {
					transform: translateY(0);
				}

				.verify-btn:disabled {
					opacity: 0.6;
					cursor: not-allowed;
					transform: none;
				}

				.warning-note {
					background: rgba(255, 193, 7, 0.1);
					border: 1px solid rgba(255, 193, 7, 0.3);
					border-radius: 12px;
					padding: 1rem;
					margin: 1rem 0;
					color: #856404;
					font-size: 0.9rem;
					line-height: 1.6;
				}

				.warning-note strong {
					color: #495057;
				}

				@media (max-width: 768px) {
					.navbar {
						padding: 1rem;
					}

					.navbar h1 {
						font-size: 1.2rem;
					}

					.main-content {
						padding: 1rem;
					}

					.setup-card {
						padding: 1.5rem;
					}

					.setup-header h2 {
						font-size: 1.5rem;
					}

					.qr-code {
						width: 160px;
						height: 160px;
					}
				}
			</style>
		</head>
		<body>
			<nav class="navbar">
				<h1>Bintaro University Admission</h1>
				<a class="back-btn" onclick="goBack()">
					‚Üê Back to Dashboard
				</a>
			</nav>
			<div class="main-content">
				<div class="setup-container">
					<div class="setup-card">
						<div class="setup-header">
							<h2>Enable Two-Factor Authentication</h2>
							<p>Secure your account with an additional layer of protection using your mobile device.</p>
						</div>
						<div class="setup-steps">
							<div class="step">
								<div class="step-number">1</div>
								<div class="step-title">Install an Authenticator App</div>
								<div class="step-content">
									Download and install an authenticator app on your mobile device such as Google Authenticator, Microsoft Authenticator, Authy, or KeePassXC.
								</div>
							</div>
							<div class="step">
								<div class="step-number">2</div>
								<div class="step-title">Scan the QR Code</div>
								<div class="step-content">
									Open your authenticator app and scan the QR code below to add your Bintaro University account.
									<div class="qr-container">
										<div class="qr-code" style={ "background-image: url(" + props.QRCodeImageBase64 + ")" } id="qrCode"></div>
									</div>
								</div>
							</div>
							<div class="step">
								<div class="step-number">3</div>
								<div class="step-title">Manual Entry (Alternative)</div>
								<div class="step-content">
									If you can't scan the QR code, you can manually enter this secret key into your authenticator app:
									<div class="secret-key">
										<button class="copy-btn" onclick="copySecret()">Copy</button>
										<div id="secretKey">{ props.SecretBase32 }</div>
									</div>
									<div class="warning-note">
										<strong>Important:</strong> Keep this secret key secure and don't share it with anyone. You'll need it to recover your 2FA if you lose access to your authenticator app.
									</div>
								</div>
							</div>
							<div class="step">
								<div class="step-number">4</div>
								<div class="step-title">Verify Setup</div>
								<div class="step-content">
									Enter the 6-digit code from your authenticator app to complete the setup:
									<div class="otp-input-group">
										<label for="otpCode">Authentication Code</label>
										<input type="text" id="otpCode" class="otp-input" maxlength="6" placeholder="000000" onkeyup="validateOTP()"/>
									</div>
									<button class="verify-btn" id="verifyBtn" onclick="verifyOTP()" disabled>
										Verify & Enable 2FA
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<script>
				function goBack() {
					if (confirm("Are you sure you want to go back? Your 2FA setup will not be saved.")) {
						fetch("/totp-setup", {
							method: "DELETE",
							redirect: "follow"
						}).then((response) => {
							window.location.href = response.url;
						});
					}
				}

				function copySecret() {
					const secretKey = document.getElementById("secretKey").textContent;
					navigator.clipboard
						.writeText(secretKey)
						.then(() => {
							const copyBtn = document.querySelector(".copy-btn");
							const originalText = copyBtn.textContent;
							copyBtn.textContent = "Copied!";
							setTimeout(() => {
								copyBtn.textContent = originalText;
							}, 2000);
						})
						.catch(() => {
							alert("Failed to copy secret key. Please copy it manually.");
						});
				}

				function validateOTP() {
					const otpInput = document.getElementById("otpCode");
					const verifyBtn = document.getElementById("verifyBtn");
					const otpValue = otpInput.value;

					// Remove any non-digit characters
					const cleanOTP = otpValue.replace(/\D/g, "");
					if (cleanOTP !== otpValue) {
						otpInput.value = cleanOTP;
					}

					// Enable verify button if OTP is 6 digits
					if (cleanOTP.length === 6) {
						verifyBtn.disabled = false;
					} else {
						verifyBtn.disabled = true;
					}
				}

				function verifyOTP() {
					const otpCode = document.getElementById("otpCode").value;
					const verifyBtn = document.getElementById("verifyBtn");

					if (otpCode.length !== 6) {
						alert("Please enter a 6-digit authentication code.");
						return;
					}

					// Disable button and show loading state
					verifyBtn.disabled = true;
					verifyBtn.textContent = "Verifying...";

					// Simulate API call
					setTimeout(() => {
						const formData = new FormData();
						formData.set("otp", otpCode);
						fetch("/totp-setup", {
							method: "POST",
							body: formData
						});
					}, 1500);
				}

				// Handle Enter key press in OTP input
				document.getElementById("otpCode").addEventListener("keypress", function (e) {
					if (e.key === "Enter" && !document.getElementById("verifyBtn").disabled) {
						verifyOTP();
					}
				});

				// Auto-focus on OTP input when page loads
				window.addEventListener("load", function () {
					document.getElementById("otpCode").focus();
				});
			</script>
		</body>
	</html>
}
